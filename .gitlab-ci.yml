image: node:20-alpine

cache:
  key: "$CI_PIPELINE_IID"
  paths:
    - node_modules/

stages:
  - install
  - release
  - publish

install:
  stage: install
  script:
    - npm --userconfig=$NPMRC ci
  tags:
    - cluster
    - kubernetes

publish-snapshot:
  stage: publish
  only:
    - develop
  script:
    - npm --userconfig=$NPMRC --registry=$NPM_REGISTRY_SNAPSHOTS publish
  tags:
    - cluster
    - kubernetes

determine-version:
  stage: release
  image:
    name: orhunp/git-cliff:$GIT_CLIFF_VERSION
    entrypoint: [ "" ]
  script:
    - echo "NEW_VERSION=$(git-cliff --bumped-version -c .gitlab/gitcliff.toml)" > version.env
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(main|master)$/ && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^(release|hotfix)(.*)$/
  tags:
    - kubernetes
  artifacts:
    reports:
      dotenv:
        - version.env

generate-changelog:
  stage: release
  image:
    name: orhunp/git-cliff:latest
    entrypoint: [""]
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  script:
    - git-cliff -r . >> CHANGELOG.md
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(main|master)$/ && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^(release|hotfix)(.*)$/
  artifacts:
    paths:
      - CHANGELOG.md

release:commit-changelog:
  stage: release
  image: $REGISTRY_URL/paas/alpine-tools:$ALPINE_TOOLS_VERSION
  needs:
    - job: generate-changelog
      artifacts: true
    - job: determine-version
      artifacts: true
  before_script:
    - git config --global user.email "$COMMIT_EMAIL"
    - git config --global user.name "$COMMIT_NAME"
    - git clone "https://oauth2:$BUMPER_ACCESS_TOKEN@gitlab.intech.dev/$CI_PROJECT_PATH"
    - cd $CI_PROJECT_NAME
    - git checkout $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - export CURRENT_VERSION=$(git describe --tags --abbrev=0)
  script:
    - cp ../CHANGELOG.md .
    - echo "## [${NEW_VERSION}](https://gitlab.intech.dev/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/compare/${CURRENT_VERSION}...${NEW_VERSION}) $(date +%Y-%m-%d)" | cat - CHANGELOG.md > temp && mv temp CHANGELOG.md
    - |
      git add CHANGELOG.md
      git commit -m "doc($NEW_VERSION): update CHANGELOG"
      git push origin $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME -o ci.skip
  tags:
    - paas
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(main|master)$/ && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /^(release|hotfix|feat)(.*)$/

publish-release:
  stage: publish
  only:
    - tags
  script:
    - npm --userconfig=$NPMRC --registry=$NPM_REGISTRY_RELEASES publish
  tags:
    - cluster
    - kubernetes